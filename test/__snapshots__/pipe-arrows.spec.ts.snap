// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`to match snapshot 1`] = `
{
  "_type": "invoker",
  "args": [
    {
      "_type": "lambda",
      "args": [
        "x",
      ],
      "return": {
        "_type": "invoker",
        "args": [
          {
            "_type": "prop",
            "path": "x",
          },
        ],
        "into": {
          "_type": "invoker",
          "args": [
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "lambda",
                  "args": [
                    "x",
                    "y",
                  ],
                  "return": {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "prop",
                        "path": "x",
                      },
                      {
                        "_type": "prop",
                        "path": "y",
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "sum",
                    },
                  },
                },
              ],
              "into": {
                "_type": "invoker",
                "args": [
                  "calc",
                ],
                "into": {
                  "_type": "prop",
                  "path": "set",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "lambda",
                  "args": [
                    "x",
                  ],
                  "return": {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "prop",
                        "path": "x",
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "toUpper",
                    },
                  },
                },
              ],
              "into": {
                "_type": "invoker",
                "args": [
                  "upper",
                ],
                "into": {
                  "_type": "prop",
                  "path": "set",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "lambda",
                  "args": [
                    "m",
                  ],
                  "return": {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "prop",
                        "path": "m",
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "throw",
                    },
                  },
                },
              ],
              "into": {
                "_type": "invoker",
                "args": [
                  "Error",
                ],
                "into": {
                  "_type": "prop",
                  "path": "set",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "lambda",
                  "args": [],
                  "return": {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "invoker",
                        "args": [
                          "MockedFunctionJson",
                        ],
                        "into": {
                          "_type": "prop",
                          "path": "get",
                        },
                      },
                    ],
                    "into": {
                      "_type": "invoker",
                      "args": [
                        "CreateFunctionByJson",
                      ],
                      "into": {
                        "_type": "prop",
                        "path": "get",
                      },
                    },
                  },
                },
              ],
              "into": {
                "_type": "invoker",
                "args": [
                  "composedFunctionToUpper",
                ],
                "into": {
                  "_type": "prop",
                  "path": "set",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                [
                  "alpha",
                  "beta",
                  "omega",
                ],
              ],
              "into": {
                "_type": "invoker",
                "args": [
                  "data",
                ],
                "into": {
                  "_type": "prop",
                  "path": "set",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "invoker",
                  "args": [
                    {
                      "_type": "invoker",
                      "args": [
                        {
                          "_type": "prop",
                          "path": "toUpper",
                        },
                      ],
                      "into": {
                        "_type": "prop",
                        "path": "map",
                      },
                    },
                  ],
                  "into": {
                    "_type": "prop",
                    "path": "mock",
                  },
                },
              ],
              "into": {
                "_type": "invoker",
                "args": [
                  "MockedFunctionJson",
                ],
                "into": {
                  "_type": "prop",
                  "path": "set",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "lambda",
                  "args": [
                    "json",
                  ],
                  "return": {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "prop",
                        "path": "json",
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "build",
                    },
                  },
                },
              ],
              "into": {
                "_type": "invoker",
                "args": [
                  "CreateFunctionByJson",
                ],
                "into": {
                  "_type": "prop",
                  "path": "set",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                "composedFunctionToUpper",
              ],
              "into": {
                "_type": "prop",
                "path": "get",
              },
            },
            {
              "_type": "lambda",
              "args": [
                "fn",
              ],
              "return": {
                "_type": "invoker",
                "args": [
                  {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "invoker",
                        "args": [
                          "data",
                        ],
                        "into": {
                          "_type": "prop",
                          "path": "get",
                        },
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "fn",
                    },
                  },
                ],
                "into": {
                  "_type": "invoker",
                  "args": [
                    "data",
                  ],
                  "into": {
                    "_type": "prop",
                    "path": "set",
                  },
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "invoker",
                  "args": [
                    "example",
                  ],
                  "into": {
                    "_type": "invoker",
                    "args": [
                      "upper",
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "get",
                    },
                  },
                },
              ],
              "into": {
                "_type": "prop",
                "path": "identity",
              },
            },
            {
              "_type": "lambda",
              "args": [
                "x",
              ],
              "return": {
                "_type": "invoker",
                "args": [
                  {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "prop",
                        "path": "x",
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "toLower",
                    },
                  },
                ],
                "into": {
                  "_type": "prop",
                  "path": "of",
                },
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "invoker",
                  "args": [
                    "data",
                  ],
                  "into": {
                    "_type": "prop",
                    "path": "get",
                  },
                },
              ],
              "into": {
                "_type": "prop",
                "path": "concat",
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "invoker",
                  "args": [
                    "TEST ERROR 1",
                  ],
                  "into": {
                    "_type": "invoker",
                    "args": [
                      "Error",
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "get",
                    },
                  },
                },
                {
                  "_type": "prop",
                  "path": "identity",
                },
              ],
              "into": {
                "_type": "prop",
                "path": "try",
              },
            },
            {
              "_type": "invoker",
              "args": [
                "acc",
                {
                  "_type": "lambda",
                  "args": [
                    "acc",
                    "x",
                  ],
                  "return": {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "prop",
                        "path": "acc",
                      },
                      {
                        "_type": "invoker",
                        "args": [
                          {
                            "_type": "invoker",
                            "args": [
                              {
                                "_type": "prop",
                                "path": "x",
                              },
                            ],
                            "into": {
                              "_type": "prop",
                              "path": "toLower",
                            },
                          },
                        ],
                        "into": {
                          "_type": "prop",
                          "path": "of",
                        },
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "concat",
                    },
                  },
                },
              ],
              "into": {
                "_type": "prop",
                "path": "set",
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "invoker",
                  "args": [
                    "acc",
                  ],
                  "into": {
                    "_type": "prop",
                    "path": "get",
                  },
                },
                [],
              ],
              "into": {
                "_type": "prop",
                "path": "reduce",
              },
            },
            {
              "_type": "invoker",
              "args": [
                {
                  "_type": "lambda",
                  "args": [
                    "x",
                  ],
                  "return": {
                    "_type": "invoker",
                    "args": [
                      {
                        "_type": "prop",
                        "path": "x",
                      },
                    ],
                    "into": {
                      "_type": "prop",
                      "path": "toUpper",
                    },
                  },
                },
              ],
              "into": {
                "_type": "prop",
                "path": "map",
              },
            },
          ],
          "into": {
            "_type": "prop",
            "path": "pipe",
          },
        },
      },
    },
  ],
  "into": {
    "_type": "prop",
    "path": "context",
  },
}
`;
